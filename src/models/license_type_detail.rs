/*
 * Offentlig Akvakulturregister
 *
 * API for det nye offentlige Akvakulturregisteret
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: akva-hjelp@fiskeridir.no
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// LicenseTypeDetail : Detaljert informasjon om tillatelsestypen.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct LicenseTypeDetail {
    /// Unik identifikator for tillatelsestypen.
    #[serde(rename = "intention", skip_serializing_if = "Option::is_none")]
    pub intention: Option<String>,
    /// Formålsverdi
    #[serde(rename = "intentionValue", skip_serializing_if = "Option::is_none")]
    pub intention_value: Option<String>,
    /// Informasjon om hva som blir produsert av denne typen tillatelse.
    #[serde(rename = "produces", skip_serializing_if = "Option::is_none")]
    pub produces: Option<String>,
    /// Produksjonsprosess-verdi.
    #[serde(rename = "producesValue", skip_serializing_if = "Option::is_none")]
    pub produces_value: Option<String>,
    /// Informasjon om den nåværende fasen av produksjonsprosessen.
    #[serde(rename = "productionStage", skip_serializing_if = "Option::is_none")]
    pub production_stage: Option<String>,
    /// Produksjonsprosess verdi.
    #[serde(
        rename = "productionStageValue",
        skip_serializing_if = "Option::is_none"
    )]
    pub production_stage_value: Option<String>,
    /// Etikett f.eks. KOMM-MATF.
    #[serde(rename = "tag", skip_serializing_if = "Option::is_none")]
    pub tag: Option<String>,
    /// Informasjon om fordelingen av ressurser eller kvoter på denne typen tillatelse.
    #[serde(
        rename = "allocationInformation",
        skip_serializing_if = "Option::is_none"
    )]
    pub allocation_information: Option<String>,
    /// Informasjon om lagringsprosessen på denne typen tillatelse.
    #[serde(rename = "stocking", skip_serializing_if = "Option::is_none")]
    pub stocking: Option<String>,
    /// Lagringsverdi
    #[serde(rename = "stockingValue", skip_serializing_if = "Option::is_none")]
    pub stocking_value: Option<String>,
    /// Informasjon om midlertidig tillatelsestype.
    #[serde(rename = "temporal", skip_serializing_if = "Option::is_none")]
    pub temporal: Option<String>,
    /// Midlertidig verdi.
    #[serde(rename = "temporalValue", skip_serializing_if = "Option::is_none")]
    pub temporal_value: Option<String>,
    /// Informasjon om fôrforbruk på tillatelsen.
    #[serde(rename = "feeding", skip_serializing_if = "Option::is_none")]
    pub feeding: Option<String>,
    /// Fôrforbruk-verdi.
    #[serde(rename = "feedingValue", skip_serializing_if = "Option::is_none")]
    pub feeding_value: Option<String>,
    #[serde(rename = "templateId", skip_serializing_if = "Option::is_none")]
    pub template_id: Option<i32>,
}

impl LicenseTypeDetail {
    /// Detaljert informasjon om tillatelsestypen.
    pub fn new() -> LicenseTypeDetail {
        LicenseTypeDetail {
            intention: None,
            intention_value: None,
            produces: None,
            produces_value: None,
            production_stage: None,
            production_stage_value: None,
            tag: None,
            allocation_information: None,
            stocking: None,
            stocking_value: None,
            temporal: None,
            temporal_value: None,
            feeding: None,
            feeding_value: None,
            template_id: None,
        }
    }
}
