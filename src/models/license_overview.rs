/*
 * Offentlig Akvakulturregister
 *
 * API for det nye offentlige Akvakulturregisteret
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: akva-hjelp@fiskeridir.no
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// LicenseOverview : Oversikt over tillatelser som hører til innehaver.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct LicenseOverview {
    /// Unik identifikator for tillatelsesversjonen.
    #[serde(rename = "versionId", skip_serializing_if = "Option::is_none")]
    pub version_id: Option<i64>,
    /// Tillatelsesnummer
    #[serde(rename = "licenseNr", skip_serializing_if = "Option::is_none")]
    pub license_nr: Option<String>,
    /// Tillatelsesnummer slik det var da innehaveren fikk tillatelsen.
    #[serde(rename = "originalLicenseNr", skip_serializing_if = "Option::is_none")]
    pub original_license_nr: Option<String>,
    /// Arvet tillatelsesnummer.
    #[serde(rename = "legacyLicenseNr", skip_serializing_if = "Option::is_none")]
    pub legacy_license_nr: Option<String>,
    #[serde(rename = "portfolioType", skip_serializing_if = "Option::is_none")]
    pub portfolio_type: Option<Box<models::LicensePortfolioType>>,
    /// Unik identifikator for hovedtillatelsen i innehaverens portefølje over tillatelser.
    #[serde(
        rename = "portfolioMasterLicenseId",
        skip_serializing_if = "Option::is_none"
    )]
    pub portfolio_master_license_id: Option<i64>,
    /// Juridisk-enhetsnummer-identifikator
    #[serde(rename = "legalEntityNrId", skip_serializing_if = "Option::is_none")]
    pub legal_entity_nr_id: Option<String>,
    /// Åpent juridisk enhetsnummer.
    #[serde(rename = "openLegalEntityNr", skip_serializing_if = "Option::is_none")]
    pub open_legal_entity_nr: Option<String>,
    /// Juridisk enhetsnavn.
    #[serde(rename = "legalEntityName", skip_serializing_if = "Option::is_none")]
    pub legal_entity_name: Option<String>,
    /// Regimet som produksjonsprosessen for den juridiske enheten opererer under.
    #[serde(rename = "productionRegime", skip_serializing_if = "Option::is_none")]
    pub production_regime: Option<String>,
    /// Modellen for hvordan produksjonsprosessen skal være.
    #[serde(rename = "productionModel", skip_serializing_if = "Option::is_none")]
    pub production_model: Option<String>,
    #[serde(rename = "capacity", skip_serializing_if = "Option::is_none")]
    pub capacity: Option<Box<models::CapacityInfo>>,
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<Box<models::LicenseTypeOverview>>,
    #[serde(rename = "species", skip_serializing_if = "Option::is_none")]
    pub species: Option<Box<models::SpeciesOverview>>,
    #[serde(rename = "connections", skip_serializing_if = "Option::is_none")]
    pub connections: Option<Vec<models::LatestLicenseSiteConnectionOverview>>,
    #[serde(rename = "placement", skip_serializing_if = "Option::is_none")]
    pub placement: Option<Box<models::AreaPlacement>>,
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<Box<models::VersionOverview>>,
}

impl LicenseOverview {
    /// Oversikt over tillatelser som hører til innehaver.
    pub fn new() -> LicenseOverview {
        LicenseOverview {
            version_id: None,
            license_nr: None,
            original_license_nr: None,
            legacy_license_nr: None,
            portfolio_type: None,
            portfolio_master_license_id: None,
            legal_entity_nr_id: None,
            open_legal_entity_nr: None,
            legal_entity_name: None,
            production_regime: None,
            production_model: None,
            capacity: None,
            r#type: None,
            species: None,
            connections: None,
            placement: None,
            version: None,
        }
    }
}
